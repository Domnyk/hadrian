image: docker:latest

services:
   - docker:dind

stages:
  - build
  - test
# 
# variables:
#   POSTGRES_HOST: postgres
#   POSTGRES_USER: postgres
#   POSTGRES_PASSWORD: "postgres"
#
before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY_IMAGE

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest

Build container:
  stage: build
  tags:
    - docker
    #  - npm install -g brunch
    #  - cd ./assets && npm install && cd ..
    #  - mix local.hex --force
    #  - mix local.rebar --force
    #  - mix deps.get --only $MIX_ENV
    #  - mix ecto.create
    #  - mix ecto.migrate
  script:
    - docker build -f Dockerfile.build -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

Test:
  variables:
      TEST_CMD: "mix test"
#     MIX_ENV: test
#     POSTGRES_DB: hadrian_prod
  stage: test
#   before_script:
#     - apk --update add postgresql-client
#     - mix local.hex --force
#     - mix local.rebar --force
#     - mix deps.get --only $MIX_ENV
#     - mix ecto.create
#     - mix ecto.migrate
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run $CONTAINER_TEST_IMAGE /bin/bash $TEST_CMD

