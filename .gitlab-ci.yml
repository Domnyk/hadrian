image: bitwalker/alpine-elixir-phoenix:1.6.6

stages:
  - build
  - test
  - release

variables:
  POSTGRES_HOST: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: "postgres"  

Run migrations:
  stage: build
  variables:
    MIX_ENV: dev
    POSTGRES_DB: hadrian_dev
  before_script:
    - mix ecto.create
  script:
    - mix ecto.migrate

Build app:
  stage: build
  variables: 
    MIX_ENV: dev
  before_script:
    - mix local.hex --force
    - mix local.rebar --force
    - mix deps.get --only $MIX_ENV
  script:
    mix compile

Compile static assets:
  stage: build
  before_script:
    - npm install -g brunch
    - cd ./assets && npm install && cd ..
  script:
    - cd ./assets && brunch build
    - cd .. && mix phx.digest

# Build:
#   stage: build
#   services:
#     - postgres:latest
#   variables:
#     MIX_ENV: dev
#     POSTGRES_DB: hadrian_dev
#   before_script:
#     - npm install -g brunch
#     - cd ./assets && npm install && cd ..
#     - mix local.hex --force
#     - mix local.rebar --force
#     - mix deps.get --only $MIX_ENV
#     - mix ecto.create
#     - mix ecto.migrate
#   script:
#     - cd ./assets && brunch build
#     - cd .. && mix phx.digest
#     - mix compile
  
Test:
  stage: test
  services:
    - postgres:latest
  variables:
    MIX_ENV: test
    POSTGRES_DB: hadrian_test
  before_script:
    - apk --update add postgresql-client
    - mix local.hex --force
    - mix local.rebar --force
    - mix deps.get --only $MIX_ENV
    - mix ecto.create
    - mix ecto.migrate
  script:
    - mix test

Release:
  stage: release
  before_script:
    - apk --update add ruby ruby-dev 
    - gem install --no-document json
    - gem install --no-document dpl
  script:
    - dpl --provider=heroku --app=$HEROKU_PROJECT_NAME --api-key=$HEROKU_API_KEY
  # only:
  #  - master
  
